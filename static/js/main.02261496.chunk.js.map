{"version":3,"sources":["components/ContactFilter/ContactFilter.module.css","context/ThemeContext.js","components/hoc/withTheme.js","components/ThemeSelector.js","components/PhoneBook/PhoneBook.js","components/ContactsList/ContactsListItem.js","components/ContactsList/ContactsList.js","components/ContactFilter/ContactFilter.js","components/Section/Section.js","components/Notification/Notification.js","components/PhoneBookPage.js","components/App.js","index.js","components/ContactsList/ContactsList.module.css","components/PhoneBook/PhoneBook.module.css","components/Section/Section.module.css"],"names":["module","exports","themeConfig","light","bodyBg","btnBgColor","dark","createContext","type","config","onToggleTheme","Provider","Consumer","ThemeContext","toggleTheme","state","setState","value","this","props","children","Component","withTheme","WrappedComponent","ctx","theme","className","checked","onChange","event","currentTarget","form","styles","inputLabel","input","formButton","name","number","handleInputChange","e","target","handleSubmit","preventDefault","isNaN","alert","onAddContact","idName","shortid","generate","idNumber","onSubmit","htmlFor","placeholder","id","required","contactsListItem","contactButton","onDeleteContact","onClick","contactsList","ContactsList","contacts","map","key","ContactFilter","onChangeFilter","section","sectionTitle","Section","title","Notification","message","filter","createContact","uuidv4","addContact","newName","some","toLowerCase","newContact","prevState","deleteContact","contactId","changeFilter","getFilteredContacts","includes","savedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","filteredContacts","length","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02261496.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactFilter_input__3dE0X\"};","import React, { createContext, Component } from \"react\";\r\n\r\nconst themeConfig = {\r\n  light: {\r\n    bodyBg: \"bgLight\",\r\n    btnBgColor: \"formBtnLight\"\r\n  },\r\n  dark: {\r\n    bodyBg: \"bgDark\",\r\n    btnBgColor: \"formBtnDark\"\r\n  }\r\n};\r\n\r\nconst { Provider, Consumer } = createContext({\r\n  type: \"light\",\r\n  config: themeConfig.light,\r\n  onToggleTheme: () => null\r\n});\r\n\r\nexport default class ThemeContext extends Component {\r\n  static Consumer = Consumer;\r\n\r\n  toggleTheme = () => {\r\n    const { type, config } = this.state;\r\n    const { dark, light } = themeConfig;\r\n    this.setState({\r\n      type: type === \"dark\" ? \"light\" : \"dark\",\r\n      config: config === dark ? light : dark\r\n    });\r\n  };\r\n\r\n  state = {\r\n    type: \"light\",\r\n    config: themeConfig.light,\r\n    onToggleTheme: this.toggleTheme\r\n  };\r\n\r\n  render() {\r\n    return <Provider value={this.state}>{this.props.children}</Provider>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ThemeContext from \"../../context/ThemeContext\";\r\n\r\nconst withTheme = WrappedComponent => {\r\n  return function WithTheme(props) {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {ctx => <WrappedComponent {...props} theme={ctx} />}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withTheme;\r\n","import React from \"react\";\r\nimport withTheme from \"./hoc/withTheme\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ThemeSelector = ({ theme }) => {\r\n  const { config, type, onToggleTheme } = theme;\r\n  return (\r\n    <div className={`themeSelector ${config.bodyBg}`}>\r\n      <span className=\"label\">Toggle theme ({type})</span>\r\n      <label className=\"switch\">\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={type === \"dark\"}\r\n          onChange={event => onToggleTheme(event.currentTarget.value)}\r\n        />\r\n        <span className=\"slider round\"></span>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nThemeSelector.propTypes = {\r\n  theme: PropTypes.shape({\r\n    type: PropTypes.string.isRequired,\r\n    config: PropTypes.shape({\r\n      bodyBg: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    onToggleTheme: PropTypes.func.isRequired\r\n  }).isRequired\r\n};\r\n\r\nexport default withTheme(ThemeSelector);\r\n","import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport withTheme from \"../hoc/withTheme\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./PhoneBook.module.css\";\r\n\r\nconst { form, inputLabel, input, formButton } = styles;\r\n\r\nclass PhoneBook extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n    theme: PropTypes.shape({\r\n      config: PropTypes.shape({\r\n        btnBgColor: PropTypes.string.isRequired\r\n      }).isRequired\r\n    }).isRequired\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\"\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n\r\n    if (!isNaN(+name)) {\r\n      alert(\"Enter valid Name\");\r\n      return;\r\n    }\r\n\r\n    if (isNaN(+number)) {\r\n      alert(\"Enter valid Number\");\r\n      return;\r\n    }\r\n\r\n    this.props.onAddContact(name, number);\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  idName = shortid.generate();\r\n  idNumber = shortid.generate();\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { theme } = this.props;\r\n\r\n    return (\r\n      <form className={form} onSubmit={this.handleSubmit}>\r\n        <label className={inputLabel} htmlFor={this.idName}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className={input}\r\n          type=\"text\"\r\n          placeholder=\"Enter user name*\"\r\n          value={name}\r\n          onChange={this.handleInputChange}\r\n          name=\"name\"\r\n          id={this.idName}\r\n          required\r\n        />\r\n        <label className={inputLabel} htmlFor={this.idNumber}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className={input}\r\n          type=\"text\"\r\n          placeholder=\"Enter user phone number*\"\r\n          value={number}\r\n          onChange={this.handleInputChange}\r\n          name=\"number\"\r\n          id={this.idNumber}\r\n          required\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className={`${formButton} ${theme.config.btnBgColor}`}\r\n        >\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(PhoneBook);\r\n","import React from \"react\";\r\nimport withTheme from \"../hoc/withTheme\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactsList.module.css\";\r\n\r\nconst { contactsListItem, contactButton } = styles;\r\n\r\nconst ContactsListItem = ({ id, name, number, onDeleteContact, theme }) => (\r\n  <li className={contactsListItem}>\r\n    <p>\r\n      {name}: {number}\r\n    </p>\r\n    <button\r\n      type=\"submit\"\r\n      onClick={() => onDeleteContact(id)}\r\n      className={`${contactButton} ${theme.config.btnBgColor}`}\r\n    >\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactsListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  theme: PropTypes.shape({\r\n    config: PropTypes.shape({\r\n      btnBgColor: PropTypes.string.isRequired\r\n    }).isRequired\r\n  }).isRequired\r\n};\r\n\r\nexport default withTheme(ContactsListItem);\r\n","import React from \"react\";\r\nimport ContactsListItem from \"./ContactsListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactsList.module.css\";\r\n\r\nconst { contactsList } = styles;\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={contactsList}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactsListItem\r\n        key={id}\r\n        id={id}\r\n        name={name}\r\n        number={number}\r\n        onDeleteContact={onDeleteContact}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired\r\n    }).isRequired\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactsList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactFilter.module.css\";\r\n\r\nconst { input } = styles;\r\n\r\nconst ContactFilter = ({ value, onChangeFilter }) => (\r\n  <input\r\n    className={input}\r\n    type=\"text\"\r\n    placeholder=\"Search contacts by name*\"\r\n    value={value}\r\n    onChange={({ target }) => onChangeFilter(target.value)}\r\n  />\r\n);\r\n\r\nContactFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactFilter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Section.module.css\";\r\n\r\nconst { section, sectionTitle } = styles;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={section}>\r\n    <h2 className={sectionTitle}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\nimport Phonebook from \"./PhoneBook\";\r\nimport ContactsList from \"./ContactsList\";\r\nimport ContactFilter from \"./ContactFilter\";\r\nimport Section from \"./Section\";\r\nimport Notification from \"./Notification\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport withTheme from \"./hoc/withTheme\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass PhoneBookPage extends Component {\r\n  static propTypes = {\r\n    theme: PropTypes.shape({\r\n      config: PropTypes.shape({\r\n        bodyBg: PropTypes.string.isRequired\r\n      }).isRequired\r\n    }).isRequired\r\n  };\r\n\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    const savedContacts = localStorage.getItem(\"contacts\");\r\n\r\n    if (savedContacts) {\r\n      this.setState({\r\n        contacts: JSON.parse(savedContacts)\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  createContact = (name, number) => ({\r\n    id: uuidv4(),\r\n    name,\r\n    number\r\n  });\r\n\r\n  addContact = (newName, number) => {\r\n    const { contacts } = this.state;\r\n    if (\r\n      contacts.some(({ name }) => name.toLowerCase() === newName.toLowerCase())\r\n    ) {\r\n      alert(`${newName} is already in contacts`);\r\n      return;\r\n    }\r\n    const newContact = this.createContact(newName, number);\r\n\r\n    this.setState(prevState => ({\r\n      contacts: [...prevState.contacts, newContact]\r\n    }));\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(({ id }) => id !== contactId)\r\n    }));\r\n  };\r\n\r\n  changeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const filteredContacts = this.getFilteredContacts();\r\n    const { theme } = this.props;\r\n\r\n    return (\r\n      <div className={`phoneBook ${theme.config.bodyBg}`}>\r\n        <Section title=\"Phonebook\">\r\n          <Phonebook onAddContact={this.addContact} />\r\n        </Section>\r\n        <Section title=\"Contacts\">\r\n          {contacts.length > 1 && (\r\n            <ContactFilter value={filter} onChangeFilter={this.changeFilter} />\r\n          )}\r\n          {contacts.length < 1 ? (\r\n            <Notification message=\"There is no contact yet...\" />\r\n          ) : (\r\n            <ContactsList\r\n              contacts={filteredContacts}\r\n              onDeleteContact={this.deleteContact}\r\n            />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(PhoneBookPage);\r\n","import React from \"react\";\r\nimport ThemeSelector from \"./ThemeSelector\";\r\nimport PhoneBookPage from \"./PhoneBookPage\";\r\nimport ThemeContext from \"../context/ThemeContext\";\r\n\r\nconst App = toggleTheme => (\r\n  <ThemeContext>\r\n    <ThemeSelector toggleTheme={toggleTheme} />\r\n    <PhoneBookPage />\r\n  </ThemeContext>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./base.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsListItem\":\"ContactsList_contactsListItem__OvQVa\",\"contactButton\":\"ContactsList_contactButton__1vR6h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"PhoneBook_form__23DOZ\",\"inputLabel\":\"PhoneBook_inputLabel__OZQUl\",\"input\":\"PhoneBook_input__2CxK-\",\"formButton\":\"PhoneBook_formButton__Sw-4X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3NMOv\",\"sectionTitle\":\"Section_sectionTitle__32f6L\"};"],"sourceRoot":""}